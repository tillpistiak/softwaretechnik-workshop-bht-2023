openapi: 3.0.0
info:
  title: Appointment Service
  version: 1.0.0
  description: API for managing users,groups and appointments

paths:
  /users:
    get:
      summary: List Users
      description: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create User
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, validation error

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: ID of the user
        schema:
          type: integer
          format: int64

    get:
      summary: Get User by ID
      description: Get a specific user by their ID
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update User
      description: Update an existing user by their ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, validation error
        '404':
          description: User not found

    delete:
      summary: Delete User
      description: Delete a user by their ID
      responses:
        '204':
          description: Successfully deleted user
        '404':
          description: User not found
  /appointments:
    get:
      summary: List Appointments
      description: Get a list of appointments
      responses:
        '200':
          description: A list of appointments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'

    post:
      summary: Create Appointment
      description: Create a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '201':
          description: Successfully created appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request, validation error

  /appointments/{appointmentId}:
    parameters:
      - name: appointmentId
        in: path
        required: true
        description: ID of the appointment
        schema:
          type: integer
          format: int64

    get:
      summary: Get Appointment by ID
      description: Get a specific appointment by their ID
      responses:
        '200':
          description: The appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Appointment not found

    put:
      summary: Update Appointment
      description: Update an existing appointment by their ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '200':
          description: Successfully updated appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Bad request, validation error
        '404':
          description: Appointment not found

    delete:
      summary: Delete Appointment
      description: Delete a Appointment by their ID
      responses:
        '204':
          description: Successfully deleted Appointment
        '404':
          description: Appointment not found
  /groups:
    get:
      summary: List Groups
      description: Get a list of groups
      responses:
        '200':
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'

    post:
      summary: Create Group
      description: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
      responses:
        '201':
          description: Successfully created group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad request, validation error

  /groups/{groupId}:
    parameters:
      - name: groupId
        in: path
        required: true
        description: ID of the group
        schema:
          type: integer
          format: int64

    get:
      summary: Get Group by ID
      description: Get a specific group by their ID
      responses:
        '200':
          description: The group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: Group not found

    put:
      summary: Update Group
      description: Update an existing group by their ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad request, validation error
        '404':
          description: Group not found

    delete:
      summary: Delete Group
      description: Delete a Group by their ID
      responses:
        '204':
          description: Successfully deleted Group
        '404':
          description: Group not found
  /users/{id}/appointments:
    get:
      summary: Get Appointments for User
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentUser'
  /{id}/appointments/{appid}:
    delete:
      summary: Remove Appointment
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: appid
          in: path
          description: Appointment ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
    post:
      summary: Invite User to Appointment
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: appid
          in: path
          description: Appointment ID
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentUser'
  /{id}/appointments/{appid}/status/{status}:
    put:
      summary: Update Appointment Status
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: appid
          in: path
          description: Appointment ID
          required: true
          schema:
            type: integer
        - name: status
          in: path
          description: Appointment Status
          required: true
          schema:
            type: string
            enum: [ "INVITED", "DECLINED", "ACCEPTED" ]
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentUser'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        familyName:
          type: string
        givenName:
          type: string
        email:
          type: string
      required:
        - givenName
        - email
    UserRequest:
      type: object
      properties:
        familyName:
          type: string
        givenName:
          type: string
        email:
          type: string
      required:
        - givenName
        - email
    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        title:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
        - id
        - title 
    AppointmentRequest:
        type: object
        properties:
          description:
            type: string 
          title:
            type: string
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
        required:
          - id
          - start
          - end
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
    GroupRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - id
        - name
    AppointmentUser:
      type: object
      properties:
        status:
          type: string
        owner:
          type: boolean
      required:
        - status
        - owner