openapi: 3.0.0
info:
  title: Appointment Service
  version: 1.0.0
  description: API for managing appointments and users

paths:
  /users:
    get:
      summary: List Users
      description: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create User
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, validation error

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: ID of the user
        schema:
          type: integer
          format: int64

    get:
      summary: Get User by ID
      description: Get a specific user by their ID
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update User
      description: Update an existing user by their ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, validation error
        '404':
          description: User not found

    delete:
      summary: Delete User
      description: Delete a user by their ID
      responses:
        '204':
          description: Successfully deleted user
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        familyName:
          type: string
        givenName:
          type: string
        email:
          type: string
      required:
        - givenName
        - email

    UserRequest:
      type: object
      properties:
        familyName:
          type: string
        givenName:
          type: string
        email:
          type: string
      required:
        - givenName
        - email
